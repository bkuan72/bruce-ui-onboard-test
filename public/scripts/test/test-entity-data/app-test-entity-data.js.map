{"version":3,"sources":["scripts/test/test-entity-data/app-test-entity-data.ts"],"names":[],"mappings":"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","file":"app-test-entity-data.js","sourcesContent":["import * as html from \"./app-test-entity-data.html\";\nimport \"./app-test-entity-data.css\";\n\nimport { IAbstractComponentParams, Component, AbstractComponent } from \"../../common/decorator/component\";\nimport { BruceCesium, BruceInfo, CesiumBruceEntity, CesiumMouseEvents, CesiumUtils, ClientFile, EEnvironmentType, EntityAttachment, EntityType, ProjectViewBookmark } from \"bruce-maps-widget\";\nimport * as Cesium from \"cesium\";\nimport pubsub from \"../../common/utils/pubsub\";\nimport {UISchema,uiSchema} from \"../../common/data/schema\";\nexport interface IAppTestEntityDataParams extends IAbstractComponentParams\n{\n\n}\n\nconst VIEWER_CONTAINER_ID = \"APP_TEST_ENTITY_DATA_VIEWER\";\n\nconst ACCOUNT_ID = \"onboarding\";\nconst ENV = EEnvironmentType.STAGING;\nconst TEST_VIEW_ID = \"TestRenderEntityData2ca2010\";\n\ninterface IEntityData\n{\n    record: BruceInfo;\n    type: EntityType;\n    photoUrl: string;\n    name: string;\n}\n\n@Component({ name: \"app-test-entity-data\", template: html })\nexport class AppTestEntityData extends AbstractComponent<IAppTestEntityDataParams> {\n    private viewer: BruceCesium.Viewer;\n    private TooltipPos = ko.observable<{\n        x: number;\n        y: number;\n    }>(null);\n    private TooltipVisible = ko.observable(false);\n    private DialogVisible = ko.observable(false);\n    public Bookmarks: KnockoutObservable<ProjectViewBookmark[]> = ko.observable([]);\n    public SelectedBookmark: KnockoutObservable<ProjectViewBookmark> = ko.observable();\n    public SelectedEntity: KnockoutObservable<CesiumBruceEntity> = ko.observable();\n    public SelectedData: KnockoutObservable<IEntityData> = ko.observable();\n    public uiSchema: UISchema[] = uiSchema;\n\n    constructor(params: IAppTestEntityDataParams)\n    {\n        super(params);\n        \n        this.addDisposable(this.SelectedEntity.subscribe(async (data) =>\n        {\n            if (data != null)\n            await this.loadData(data);\n        }));\n        this.addDisposable(this.SelectedBookmark.subscribe((bookmark) =>\n        {\n            this.viewer.EnableBookmark(bookmark);\n            this.viewer.visualRegister.Unhighlight(this.SelectedEntity().bruceMeta);\n            this.TooltipVisible(false);\n            this.DialogVisible(false)\n            pubsub.publish(\"trace\",null);\n        }));\n        pubsub.subscription(\"TooltipVisible\", this.TooltipVisible).subscribe();\n        pubsub.subscription(\"DialogVisible\", this.DialogVisible).subscribe();\n        pubsub.subscription(\"SelectedEntity\", (data) => {\n            this.showTooltip(data);\n            this.handleSelect(data);\n        }).subscribe();\n    }\n\n    public rendered(): void\n    {\n        super.rendered();\n        this.createViewer();\n    }\n\n    public dispose(): void\n    {\n        super.dispose();\n        this.viewer?.Dispose();\n    }\n\n    private createViewer(): void\n    {\n        const container = document.getElementById(VIEWER_CONTAINER_ID);\n        if (!container)\n        {\n            console.error(\"Viewer container not found\");\n            return;\n        }\n        const viewer = this.viewer = new BruceCesium.Viewer();\n        viewer.Init(container, ACCOUNT_ID, ENV);\n\n\n        this.renderTestData();\n        this.listenSelection();\n    }\n\n    private async renderTestData(): Promise<void>\n    {\n        const viewer = this.viewer;\n        const data = await viewer.LoadProjectView(TEST_VIEW_ID);\n        const bookmarks = await viewer.projectView.GetBookmarks(viewer.GetAPIInstance());\n        this.Bookmarks(bookmarks);\n        this.SelectedBookmark(bookmarks.length ? bookmarks[ 0 ] : null);\n    }\n    private handleSelect  = async (data) =>\n    {\n          \n        const pos = <Cesium.Cartesian2> data.position;\n        if (CesiumUtils.Validate2DPosition(pos))\n        {\n            if (this.SelectedEntity()?.bruceMeta)\n            {\n                this.viewer.visualRegister.Unhighlight(this.SelectedEntity().bruceMeta);\n            }\n            this.SelectedEntity(null);\n            const entities = this.viewer.DigEntitiesFromMouse(pos, 1);\n            const entity = entities.length ? entities[ 0 ] : null;\n            if (entity)\n            {\n                \n                \n                const api = this.viewer.GetAPIInstance();\n                const entityId = entity?.bruceMeta.EntityID() ?? null;\n                const record = entityId ? await BruceInfo.GetById(api, entityId) : null;\n                console.log('record',record);\n                pubsub.publish(\"trace\",{...entity,position:{...pos},bruceInfo:record});\n                this.viewer.visualRegister.Highlight(entity.bruceMeta);\n                this.SelectedEntity(entity);\n            }\n        }\n    }\n    private showTooltip(data:any):void\n    // might be called by click or publish event\n    {\n        \n        const pos = <Cesium.Cartesian2> data.position;\n        if (CesiumUtils.Validate2DPosition(pos))\n        {\n            this.TooltipPos(pos);\n            this.TooltipVisible(true);\n        }\n        \n    }\n    private listenSelection(): void\n    {\n        const viewer = this.viewer;\n        const events = new CesiumMouseEvents(viewer.CesiumViewer);\n       \n        // RightClick show tooltip\n        // Left click show dialog and hide tooltip\n        events.RightClickEvent.Subscribe((data) =>\n        {\n            this.handleSelect(data);\n            this.DialogVisible(true);\n            this.TooltipVisible(false);\n        });\n        events.ClickEvent.Subscribe((data) =>\n        {\n            this.handleSelect(data);\n            this.DialogVisible(false);\n            this.showTooltip(data);\n        });\n        events.LeftDownEvent.Subscribe((event) =>\n        {\n            this.DialogVisible(false);\n        });\n        events.EnableEventHandling();\n    }\n\n    private async loadData(entity: CesiumBruceEntity): Promise<void>\n    {\n        console.log('loadData', entity)\n        this.SelectedData(null);\n        if (!entity) return;\n        const api = this.viewer.GetAPIInstance();\n        const entityId = entity?.bruceMeta.EntityID() ?? null;\n        const record = entityId ? await BruceInfo.GetById(api, entityId) : null;\n        const type = record ? await EntityType.GetByID(api, record.Bruce[ \"EntityType.ID\" ]) : null;\n        const name = await record?.CalculateName(api);\n        const attachments = await EntityAttachment.GetByEntityID(api, entityId);\n        attachments.sort((a, b) => a.DisplayOrder - b.DisplayOrder);\n        const defaultPhoto = attachments.find(x => x[ \"EntityAttachmentType.ID\" ] == \"photo\");\n        console.log('SelectedData', record, type, name, defaultPhoto);\n        console.log('defaultPhoto',defaultPhoto?.ClientFile.getDownloadURL(api))\n        this.SelectedData({\n            record: record,\n            type: type,\n            photoUrl: defaultPhoto?.ClientFile.getDownloadURL(api),\n            name: name\n        });\n    }\n}"]}