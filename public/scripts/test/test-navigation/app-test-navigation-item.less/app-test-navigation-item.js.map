{"version":3,"sources":["scripts/test/test-navigation/app-test-navigation-item.less/app-test-navigation-item.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IAYA;QAAiC,+BAAmC;QAGhE,qBAAY,MAAwB;YAApC,YAEI,kBAAM,MAAM,CAAC,SAUhB;YAdO,YAAM,GAAG,EAAE,CAAC,UAAU,CAAY,EAAE,CAAC,CAAC;YACtC,aAAO,GAAG,EAAE,CAAC,UAAU,CAAS,EAAE,CAAC,CAAC;YAIxC,IAAM,IAAI,GAAG,kBAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC7C,IAAI,IAAI,EAAE;gBACN,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACrB;YAED,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,IAAI;gBAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;gBACjB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC,CAAC;;QACR,CAAC;QACO,qCAAe,GAAvB;YACI,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;YAC7C,gBAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC;QAC1D,CAAC;QAnBQ,WAAW;YADvB,qBAAS,CAAC,EAAE,IAAI,EAAE,0BAA0B,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;WACnD,WAAW,CAoBvB;QAAD,kBAAC;KApBD,AAoBC,CApBgC,6BAAiB,GAoBjD;IApBY,kCAAW","file":"app-test-navigation-item.js","sourcesContent":["import * as html from \"./app-test-navigation-item.html\";\r\n\r\nimport { IAbstractComponentParams, Component, AbstractComponent } from \"../../../common/decorator/component\";\r\nimport { BruceInfo, EntityType, BruceMeta, CesiumBruceEntity } from \"bruce-maps-widget\";\r\nimport {KoUtils} from \"../../../common/utils/ko-utils\";\r\nimport pubsub from \"../../../common/utils/pubsub\";\r\nimport {TraceNode} from \"../app-test-navigation\";\r\ninterface NavigationParams extends IAbstractComponentParams\r\n{\r\n    entity: KnockoutObservable<TraceNode>;\r\n}\r\n@Component({ name: \"app-test-navigation-item\", template: html })\r\nexport class AppTestForm extends AbstractComponent<NavigationParams> {\r\n    private entity = ko.observable<TraceNode>('');\r\n    private address = ko.observable<string>('');\r\n    constructor(params: NavigationParams)\r\n    {\r\n        super(params);\r\n        const data = KoUtils.GetValue(params.entity);\r\n        if (data) {\r\n            this.entity(data);\r\n        }\r\n\r\n        this.addDisposable(params.entity.subscribe((data) => {\r\n            console.log(data)\r\n            this.entity(data);\r\n        }));\r\n    }\r\n    private navigationClick() {\r\n        console.log('navigationClick', this.entity())\r\n        pubsub.publish(\"SelectedEntity\", this.entity().value);\r\n    }\r\n}\r\n\r\n"]}