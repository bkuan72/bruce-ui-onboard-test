{"version":3,"sources":["scripts/test/test-navigation/app-test-navigation.ts"],"names":[],"mappings":"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","file":"app-test-navigation.js","sourcesContent":["import * as html from \"./app-test-navigation.html\";\nimport \"./app-test-navigation.css\";\nimport { IAbstractComponentParams, Component, AbstractComponent } from \"../../common/decorator/component\";\nimport { BruceInfo, EntityType, BruceMeta, CesiumBruceEntity, } from \"bruce-maps-widget\";\nimport { UISchema } from \"../../common/data/schema\";\nimport { KoUtils } from \"../../common/utils/ko-utils\";\nimport pubsub from \"../../common/utils/pubsub\";\nimport * as Cesium from \"cesium\";\ninterface CesiumBruceEntityWithPost extends CesiumBruceEntity {\n    position: Cesium.Cartesian2;\n    bruceInfo: BruceInfo;\n} \nexport interface TraceNode\n{\n    key?: string;\n    value?: CesiumBruceEntityWithPost | null;\n    next?: TraceNode | null;\n    prev?: TraceNode | null;\n}\nclass traceNode implements TraceNode\n{\n    constructor(public key: string, public value: CesiumBruceEntityWithPost, public next: TraceNode | null = null, public prev: TraceNode | null = null)\n    {\n        this.key = key;\n        this.value = value;\n        this.next = null;\n        this.prev = null;\n    }\n}\n\ninterface NavigationParams extends IAbstractComponentParams\n{\n\n}\n@Component({ name: \"app-test-navigation\", template: html })\nexport class AppTestForm extends AbstractComponent<NavigationParams> {\n    private capacity = 10;\n    private traceMap = {};\n    private count = 0;\n    private dummyHead: TraceNode = new traceNode(\"\", null);\n    private dummyTail: TraceNode = new traceNode(\"\", null);\n    private current: KnockoutObservable<TraceNode> = ko.observable(this.dummyHead);\n    private showTrace = ko.observable(true);\n    constructor(params: NavigationParams)\n    {\n        super(params);\n        this.dummyHead.next = this.dummyTail;\n        this.dummyTail.prev = this.dummyHead;\n        pubsub.subscription(\"trace\", (entity) =>\n        {\n            if (!entity) {\n                debugger\n                this.clearTrace();\n                return\n            }\n            const key = entity?.bruceMeta.EntityID();\n            if (key)\n            {\n                this.addTraceNode(key, entity);\n            }\n        }).subscribe();\n    }\n    private clearTrace() {\n        this.dummyHead = new traceNode(\"\", null);\n        this.dummyTail = new traceNode(\"\", null);\n        this.dummyHead.next = this.dummyTail;\n        this.dummyTail.prev = this.dummyHead;\n        this.count = 0;\n        this.traceMap = {};\n        this.current(this.dummyHead);\n    }\n    private addTraceNode(key: string, value: CesiumBruceEntityWithPost)\n    {\n        let node = this.traceMap[ key ];\n        console.log('map',this.traceMap)\n        if (node)\n        {\n            node.value = value;\n            this.moveToHead(node);\n            this.traceMap[ node.key ] = node;\n        } else\n        {\n            let newNode = new traceNode(key, value);\n            this.traceMap[ key ] = newNode;\n            this.addToHead(newNode);\n\n            if (this.count == this.capacity)\n            {\n                this.removeTraceNode(this.dummyTail.prev);\n            } else\n            {\n                this.count++;\n            }\n        }\n        \n        this.current(this.dummyHead.next);\n        console.log('next',this.dummyHead.next);\n    }\n    private moveToHead(node: TraceNode)\n    {\n        this.removeTraceNode(node);\n        this.addToHead(node);\n    }\n    private addToHead(node: TraceNode)\n    {\n        node.next = this.dummyHead.next;\n        node.prev = this.dummyHead;\n        this.dummyHead.next.prev = node;\n        this.dummyHead.next = node;\n    }\n    private removeTraceNode(node: TraceNode)\n    {\n        node.prev.next = node.next;\n        node.next.prev = node.prev;\n        delete this.traceMap[ node.key ];\n    }\n    private hideNav() {\n        this.showTrace(false);\n    }\n    private showNav() {\n        this.showTrace(true);\n    }\n}"]}