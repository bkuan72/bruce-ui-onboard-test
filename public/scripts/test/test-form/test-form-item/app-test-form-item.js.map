{"version":3,"sources":["scripts/test/test-form/test-form-item/app-test-form-item.ts"],"names":[],"mappings":"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","file":"app-test-form-item.js","sourcesContent":["import * as html from \"./app-test-form-item.html\";\nimport \"./app-test-form-item.css\";\nimport { IAbstractComponentParams, Component, AbstractComponent } from \"../../../common/decorator/component\";\nimport { BruceCesium, BruceInfo, IEntityTypeAttribute,CesiumMouseEvents, CesiumUtils, ClientFile, EEnvironmentType, EntityAttachment, EntityType, ProjectViewBookmark } from \"bruce-maps-widget\";\nimport {generateMenuData,MenuDataSchema,findParentKeys} from \"../../../common/utils/MenuDataGenerator\";\nimport {UISchema} from \"../../../common/data/schema\";\nimport {KoUtils} from \"../../../common/utils/ko-utils\";\ninterface IEntityData\n{\n    record: BruceInfo;\n    type: EntityType;\n    photoUrl: string;\n    name: string;\n}\n\ninterface ITestFormParams extends IAbstractComponentParams {\n    value:KnockoutObservable<IEntityData>;\n    uiSchema:UISchema[];\n}\n@Component({ name: \"app-test-form-item\", template: html })\nexport class AppTestForm extends AbstractComponent<ITestFormParams> {\n    private value = ko.observable<IEntityData>();\n    private FormDataSchema = ko.observableArray<MenuDataSchema>([]);\n    constructor(params: ITestFormParams) {\n        super(params);\n        // the params can be converted  asynchronous by click or synchronous by recurve component\n        this.init(params);\n    }\n    private init(params) {\n        const {uiSchema} = params;\n        const data = KoUtils.GetValue(params.value);\n        \n        if (data != null) {\n           \n            const dataSchema:IEntityTypeAttribute = data?.type?.DataSchema;\n    \n            let formData = generateMenuData(dataSchema, uiSchema, data?.record).map((item) => {\n                item.defaultValue = ko.observable(item.defaultValue)\n                return item\n            });\n            this.FormDataSchema(formData);\n            this.value(data);\n        }\n        this.addDisposable(params.value.subscribe((data) => {\n            const dataSchema:IEntityTypeAttribute = data?.type?.DataSchema;\n    \n            let formData = generateMenuData(dataSchema, uiSchema, data?.record).map((item) => {\n                if (item[\"control\"]) {\n                    item.defaultValue = ko.observable(item.defaultValue)\n                }\n                return item\n            });\n            this.FormDataSchema(formData);\n            this.value(data);\n        }));\n        for(let i in this.FormDataSchema()){\n            let item = this.FormDataSchema()[i];\n            if (item[\"control\"]) {\n                item.defaultValue.subscribe((value) => {\n                    // console.log(value);\n                    console.log(findParentKeys(item),value)\n                    alert(`controled filed ${findParentKeys(item).join(\".\")} changed to ${value}`)\n                });\n            }\n        }\n            \n            \n    }\n    public onChange(data) {\n        console.log(data);\n    }\n}\n\n\n"]}